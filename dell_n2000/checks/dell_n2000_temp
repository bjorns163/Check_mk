#!/usr/bin/python
# -*- encoding: utf-8; py-indent-offset: 4 -*-
# +------------------------------------------------------------------+
# |             ____ _               _        __  __ _  __           |
# |            / ___| |__   ___  ___| | __   |  \/  | |/ /           |
# |           | |   | '_ \ / _ \/ __| |/ /   | |\/| | ' /            |
# |           | |___| | | |  __/ (__|   <    | |  | | . \            |
# |            \____|_| |_|\___|\___|_|\_\___|_|  |_|_|\_\           |
# |                                                                  |
# | Copyright Mathias Kettner 2013             mk@mathias-kettner.de |
# +------------------------------------------------------------------+
#
# This file is part of Check_MK.
# The official homepage is at http://mathias-kettner.de/check_mk.
#
# check_mk is free software;  you can redistribute it and/or modify it
# under the  terms of the  GNU General Public License  as published by
# the Free Software Foundation in version 2.  check_mk is  distributed
# in the hope that it will be useful, but WITHOUT ANY WARRANTY;  with-
# out even the implied warranty of  MERCHANTABILITY  or  FITNESS FOR A
# PARTICULAR PURPOSE. See the  GNU General Public License for more de-
# ails.  You should have  received  a copy of the  GNU  General Public
# License along with GNU Make; see the file  COPYING.  If  not,  write
# to the Free Software Foundation, Inc., 51 Franklin St,  Fifth Floor,
# Boston, MA 02110-1301 USA.


dell_n2000_temp_default_levels = (55, 60)                        

def inventory_dell_n2000_temp(info): 
  if info:
    inventory = []
    for temp, oid in info:
      if oid.endswith("0"):
        unit = oid[0]
        inventory.append( (unit, 'dell_n2000_temp_default_levels') )
    return inventory
                                                         
def check_dell_n2000_temp(item, params, info):        
    try:
      state_names = nagios_state_names
    except NameError:
      state_names = core_state_names
    i = 0
    state = -1                                                 
    for temp, num in info:
      unit = num[0]
      if item == unit and num.endswith("0"):
        temp_unit = saveint(info[i][0])
        if type(params) != dict:                                   
            warn, crit = params                                    
        else:                                                      
            warn, crit = params["levels"]                          
                                                                   
        perf = [ ( "temp_unit", temp_unit, warn, crit ) ]   
        if temp_unit == '':                                  
            return (state, "Unit 1 not present")                   
        if temp_unit >= crit:                                
            state = 2                                              
        if temp_unit >= warn:                                
            state = 1                                              
        else:                                                      
            state = 0                                              
        return (state, "%s - %s Â°C" % (state_names[state], temp_unit), perf)  
      i+=1
    return (state, "%s - Unit missing" % (state_names[state]), perf)  
                                                               
check_info["dell_n2000_temp"] = {                                                               
    "check_function"        : check_dell_n2000_temp,
    "inventory_function"    : inventory_dell_n2000_temp,
    "service_description"   : "Temperature Unit %s", 
    "group"                 : "temperature",
    "has_perfdata"          : True,                                                                      
    "snmp_scan_function"    : lambda oid: oid(".1.3.6.1.2.1.1.2.0").startswith(".1.3.6.1.4.1.674.10895."),  
    "snmp_info"             : ( ".1.3.6.1.4.1.674.10895.5000.2.6132.1.1.43.1.8.1", [ "5", OID_END ]  )
}                                                                                                        

# vim: tabstop=2 shiftwidth=2 expandtab ai
